name: CI Pipeline

on:
  push:
    branches:
      - deployment  # Specify the branch to monitor, e.g., 'main'

jobs:
  build-and-deploy:
    runs-on: [self-hosted]  # Use the self-hosted runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        run: |
          if [ -d "backend" ]; then
            cd backend
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-5)
            docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-app:$SHORT_SHA .
            docker push ${{ secrets.DOCKER_USERNAME }}/backend-app:$SHORT_SHA
            cd ..
          fi

      - name: Build and push frontend Docker image
        run: |
          if [ -d "Frontend" ]; then
            cd Frontend
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-5)
            docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-app:$SHORT_SHA .
            docker push ${{ secrets.DOCKER_USERNAME }}/frontend-app:$SHORT_SHA
            cd ..
          fi

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.8.0'  # Specify the Helm version you need

      - name: Check Helm release status and install/upgrade
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-5)
          RELEASE_NAME="stock-app"
          RELEASE_NAMESPACE="default"
          RETRIES=5
          COUNT=0

          function helm_action {
            if helm list -n $RELEASE_NAMESPACE | grep -q "^$RELEASE_NAME"; then
              echo "Release $RELEASE_NAME found. Upgrading..."
              helm upgrade $RELEASE_NAME /home/sigmoid/Desktop/stock-app/stock-monitoring-system/stock-app \
                --namespace $RELEASE_NAMESPACE \
                --set backend.image.tag=$SHORT_SHA \
                --set frontend.image.tag=$SHORT_SHA
            else
              echo "Release $RELEASE_NAME not found. Installing..."
              helm install $RELEASE_NAME /home/sigmoid/Desktop/stock-app/stock-monitoring-system/stock-app \
                --namespace $RELEASE_NAMESPACE \
                --set backend.image.tag=$SHORT_SHA \
                --set frontend.image.tag=$SHORT_SHA
            fi
          }

          until [ $COUNT -ge $RETRIES ]
          do
            helm_action && break
            COUNT=$((COUNT+1))
            echo "Retrying... ($COUNT/$RETRIES)"
            sleep 30
          done

          if [ $COUNT -eq $RETRIES ]; then
            echo "Helm install/upgrade failed after $RETRIES attempts"
            exit 1
          fi

      - name: Verify Helm upgrade/install
        run: |
          helm status stock-app
