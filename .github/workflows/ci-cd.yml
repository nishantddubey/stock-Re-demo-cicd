name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'Frontend/**'
      - 'stock-app/**'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'Frontend/**'
      - 'stock-app/**'

jobs:
  build-and-push-backend:
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'backend') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate Docker Tag
        id: vars
        run: echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push Backend Docker image
        run: |
          docker build -t nishantddubey/stock-backend:${{ env.TAG }} ./backend
          docker push nishantddubey/stock-backend:${{ env.TAG }}

  build-and-push-frontend:
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'Frontend') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate Docker Tag
        id: vars
        run: echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push Frontend Docker image
        run: |
          docker build -t nishantddubey/stock-frontend:${{ env.TAG }} ./Frontend
          docker push nishantddubey/stock-frontend:${{ env.TAG }}

  upgrade-helm:
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, 'backend') && !contains(github.event.head_commit.message, 'Frontend')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy Helm Chart
        run: |
          helm upgrade --install stock-app ./stock-app
